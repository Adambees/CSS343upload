Sun Feb  3 14:50:01 PST 2019
*** Compiling
*** cpplint
Done processing bst_test.cpp
Done processing main.cpp
Skipping input '*.h': Can't open for reading
Done processing bst.hpp
*** cppcheck
Checking bst.hpp...
[bst.hpp:403]: (warning) Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?
[bst.hpp:313]: (performance, inconclusive) Technically the member function 'BST<T>::inorder' can be static.
[bst.hpp:332]: (performance, inconclusive) Technically the member function 'BST<T>::preorder' can be static.
[bst.hpp:350]: (performance, inconclusive) Technically the member function 'BST<T>::postorder' can be static.
1/3 files checked 55% done
Checking bst_test.cpp...
[bst_test.cpp:336]: (warning) Assert statement calls a function which may have desired side effects: 'Remove'.
[bst.hpp:313]: (performance, inconclusive) Technically the member function 'BST<string>::inorder' can be static.
[bst.hpp:332]: (performance, inconclusive) Technically the member function 'BST<string>::preorder' can be static.
[bst.hpp:350]: (performance, inconclusive) Technically the member function 'BST<string>::postorder' can be static.
[bst.hpp:313]: (performance, inconclusive) Technically the member function 'BST<int>::inorder' can be static.
[bst.hpp:332]: (performance, inconclusive) Technically the member function 'BST<int>::preorder' can be static.
[bst.hpp:350]: (performance, inconclusive) Technically the member function 'BST<int>::postorder' can be static.
2/3 files checked 98% done
Checking main.cpp...
3/3 files checked 100% done
*** running


* Testing 0 param constructor, ==, !=, IsEmpty, and XTraverse
Done Adding
Done Copy Constructor
b1 is: 
               x
            g
         f
      c
         a

Inorder Pass
Preorder Pass
Postorder pass
Done testBSTConstructors
Starting test_jhpp114
Test add, numberOfNode function
Contain pass
Pass number of nodes
Testing isEmpty, clear, != operator
Pass Get Height
Pass isEmpty
Pass clear
pass !=
Ending test_jhpp114
Pass arr
arr contain
Pass numnode, height, empty
pass arr equality
Starting test_iqbalo01
Done adding number tree1
Done adding numbers tree2
Ending test_iqbalo01
SNEHA'S TESTS ARE STARTING
      s
         n
               h
            e
               a

      s
         n
               h
            e
               a

Testing Equals Operator (true)
Testing Remove (true)
      s
         n
               h
            e

Testing Equals Operator (false)
SNEHA'S TESTS ARE COMPLETE
Starting test_jstew701
* Testing Add, Contains, and Clear
Ending test_jstew701
test_hsoko18
End hsoko18
Check remvoe z and number node 7 pass
Pass i?
Pass number of node corresponding with i
Pass i
Removed q
number node 5 pass
Contain q pass?
assert
Remove c,l,u,y,k pass
number node == 0?
Ending test_biryua


* Running test_emilylk
e1 is: 
            w
         g
      d
            c
         b

e3 is a copy of e1
Remove c and w from e1
Clear e1
test_emilylk done
            17
         15
            13
               12
      10
            7
         5
            3
               2
                  1

Remove 10
Rebalancing

test_philip12 done
Done!
*** running with valgrind
==2471== Memcheck, a memory error detector
==2471== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2471== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2471== Command: ./myprogram.exe
==2471== 


* Testing 0 param constructor, ==, !=, IsEmpty, and XTraverse
Done Adding
Done Copy Constructor
b1 is: 
               x
            g
         f
      c
         a

Inorder Pass
Preorder Pass
Postorder pass
Done testBSTConstructors
Starting test_jhpp114
Test add, numberOfNode function
Contain pass
Pass number of nodes
Testing isEmpty, clear, != operator
Pass Get Height
Pass isEmpty
Pass clear
pass !=
Ending test_jhpp114
Pass arr
arr contain
Pass numnode, height, empty
pass arr equality
Starting test_iqbalo01
Done adding number tree1
Done adding numbers tree2
Ending test_iqbalo01
SNEHA'S TESTS ARE STARTING
      s
         n
               h
            e
               a

      s
         n
               h
            e
               a

Testing Equals Operator (true)
Testing Remove (true)
      s
         n
               h
            e

Testing Equals Operator (false)
SNEHA'S TESTS ARE COMPLETE
Starting test_jstew701
* Testing Add, Contains, and Clear
Ending test_jstew701
test_hsoko18
End hsoko18
Check remvoe z and number node 7 pass
Pass i?
Pass number of node corresponding with i
Pass i
Removed q
number node 5 pass
Contain q pass?
assert
Remove c,l,u,y,k pass
number node == 0?
Ending test_biryua


* Running test_emilylk
e1 is: 
            w
         g
      d
            c
         b

e3 is a copy of e1
Remove c and w from e1
Clear e1
test_emilylk done
            17
         15
            13
               12
      10
            7
         5
            3
               2
                  1

Remove 10
Rebalancing

test_philip12 done
Done!
==2471== 
==2471== HEAP SUMMARY:
==2471==     in use at exit: 72,704 bytes in 1 blocks
==2471==   total heap usage: 101 allocs, 100 frees, 80,712 bytes allocated
==2471== 
==2471== LEAK SUMMARY:
==2471==    definitely lost: 0 bytes in 0 blocks
==2471==    indirectly lost: 0 bytes in 0 blocks
==2471==      possibly lost: 0 bytes in 0 blocks
==2471==    still reachable: 72,704 bytes in 1 blocks
==2471==         suppressed: 0 bytes in 0 blocks
==2471== Rerun with --leak-check=full to see details of leaked memory
==2471== 
==2471== For counts of detected and suppressed errors, rerun with: -v
==2471== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
*** cleaning up
Sun Feb  3 14:50:03 PST 2019
