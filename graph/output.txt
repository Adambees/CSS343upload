Sun Feb 17 23:23:54 PST 2019
*** Compiling
graph.cpp: In member function ‘std::__cxx11::string Graph::GetEdges(const string&) const’:
graph.cpp:114:16: warning: statement has no effect [-Wunused-value]
     for ( iter1; iter1 != iter2; iter1++ ) {
                ^
graph.cpp: At global scope:
graph.cpp:222:36: warning: unused parameter ‘startLabel’ [-Wunused-parameter]
 void Graph::Dijkstra(const string &startLabel,
                                    ^
graph.cpp:223:40: warning: unused parameter ‘weights’ [-Wunused-parameter]
                      map<string, int> &weights,
                                        ^
graph.cpp:224:43: warning: unused parameter ‘previous’ [-Wunused-parameter]
                      map<string, string> &previous) const {
                                           ^
graph.cpp:234:30: warning: unused parameter ‘startLabel’ [-Wunused-parameter]
 int Graph::MST(const string &startLabel,
                              ^
graph.cpp:236:55: warning: unused parameter ‘visit’ [-Wunused-parameter]
                           const string &to, int weight)) const {
                                                       ^
graph.cpp: In member function ‘void Graph::dfsHelper(const string&, void (*)(const string&))’:
graph.cpp:270:16: warning: statement has no effect [-Wunused-value]
       for (itr1; itr1 != itr2; itr1++) {
                ^
graph.cpp: In member function ‘bool Graph::AddVertex(const string&)’:
graph.cpp:92:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
graph.cpp: In member function ‘std::__cxx11::string Graph::GetEdges(const string&) const’:
graph.cpp:122:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
graph.cpp: In member function ‘bool Graph::Disconnect(const string&, const string&)’:
graph.cpp:195:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
*** cpplint
Done processing graph.cpp
Done processing graph_test.cpp
Done processing main.cpp
Skipping input '*.hpp': Can't open for reading
*** cppcheck
Checking graph.cpp...
[graph.cpp:138]: (style) The scope of the variable 'from' can be reduced.
[graph.cpp:139]: (style) The scope of the variable 'end' can be reduced.
[graph.cpp:222] -> [graph.h:123]: (performance, inconclusive) Technically the member function 'Graph::Dijkstra' can be static.
[graph.cpp:234] -> [graph.h:132]: (performance, inconclusive) Technically the member function 'Graph::MST' can be static.
[graph.cpp:24]: (performance) Prefer prefix ++/-- operators for non-primitive types.
[graph.cpp:43]: (performance) Prefer prefix ++/-- operators for non-primitive types.
[graph.cpp:114]: (performance) Prefer prefix ++/-- operators for non-primitive types.
[graph.cpp:270]: (performance) Prefer prefix ++/-- operators for non-primitive types.
1/3 files checked 53% done
Checking graph_test.cpp...
[graph_test.cpp:107]: (warning) Assert statement calls a function which may have desired side effects: 'Disconnect'.
[graph_test.cpp:110]: (warning) Assert statement calls a function which may have desired side effects: 'Disconnect'.
2/3 files checked 98% done
Checking main.cpp...
3/3 files checked 100% done
[graph.cpp:234]: (style) The function 'MST' is never used.
[graph_test.cpp:44]: (style) The function 'edgeVisitor' is never used.
[graph_test.cpp:158]: (style) The function 'testGraph0BFS' is never used.
[graph_test.cpp:183]: (style) The function 'testGraph0Dijkstra' is never used.
[graph_test.cpp:214]: (style) The function 'testGraph1' is never used.
*** running
Adding Pass?
Duplicate add check pass?
Self Connect pass?
Connecting Pass?
num vertices, edge, edge() pass?
HasVertex should be pass
GetEdge pass?
disconnect pass?
testGraphBasic()
testGraph0DFS
test has vertex dfs
test getedge
dfs test 1 done?
Done.
*** running with valgrind
==7653== Memcheck, a memory error detector
==7653== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==7653== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==7653== Command: ./myprogram.exe
==7653== 
Adding Pass?
Duplicate add check pass?
Self Connect pass?
Connecting Pass?
num vertices, edge, edge() pass?
HasVertex should be pass
GetEdge pass?
disconnect pass?
testGraphBasic()
testGraph0DFS
test has vertex dfs
test getedge
dfs test 1 done?
Done.
==7653== 
==7653== HEAP SUMMARY:
==7653==     in use at exit: 72,704 bytes in 1 blocks
==7653==   total heap usage: 34 allocs, 33 frees, 87,625 bytes allocated
==7653== 
==7653== LEAK SUMMARY:
==7653==    definitely lost: 0 bytes in 0 blocks
==7653==    indirectly lost: 0 bytes in 0 blocks
==7653==      possibly lost: 0 bytes in 0 blocks
==7653==    still reachable: 72,704 bytes in 1 blocks
==7653==         suppressed: 0 bytes in 0 blocks
==7653== Rerun with --leak-check=full to see details of leaked memory
==7653== 
==7653== For counts of detected and suppressed errors, rerun with: -v
==7653== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
*** cleaning up
Sun Feb 17 23:23:57 PST 2019
